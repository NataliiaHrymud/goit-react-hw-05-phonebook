{"version":3,"sources":["components/ContactListItem/contactListItem.module.css","components/ContactForm/contactForm.module.css","components/App/app.module.css","components/Notification/Notification.module.css","transitions/slideFromRight.module.css","transitions/contacts.module.css","components/ContactForm/ContactForm.js","components/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/App/App.js","index.js","transitions/slideFromLeft.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmitData","reset","this","onSubmit","className","styles","form","htmlFor","type","required","onChange","Component","Filter","onChangeFilter","ContactListItem","contact","onDeleteContact","contactElement","contactContainer","onClick","id","deleteBtn","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","unmountOnExit","classNames","slideFromLeftTransition","Notification","message","notification","App","filter","showMessage","changeFilter","data","addContact","shortid","generate","find","setTimeout","localStorage","getItem","prevState","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","in","appear","slideFromRightTransition","length","contactsTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2b746dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"contactListItem_deleteBtn__3ZoQ7\",\"contactElement\":\"contactListItem_contactElement__2GCqw\",\"contactContainer\":\"contactListItem_contactContainer__3OpS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__2VMvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-txt\":\"app_logo-txt__Xm73F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Nt7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromRight_enter__2ZOmi\",\"enterActive\":\"slideFromRight_enterActive__3yWIq\",\"exit\":\"slideFromRight_exit__2o1fk\",\"exitActive\":\"slideFromRight_exitActive__3tsw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contacts_enter__2WMGj\",\"enterActive\":\"contacts_enterActive__3GVul\",\"exit\":\"contacts_exit__3XKmI\",\"exitActive\":\"contacts_exitActive__1jiX_\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.name || !this.state.number) {\r\n            return;\r\n          }\r\n        this.props.onSubmitData ({ ...this.state });\r\n        this.reset();\r\n    }\r\n    reset () {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n              <form \r\n              onSubmit={this.handleSubmit}\r\n              className={`${styles.form} container shadow`}\r\n              >\r\n                <label htmlFor=\"name\">\r\n                    Name\r\n                    <input \r\n                        type=\"text\" \r\n                        value={name}\r\n                        name=\"name\"\r\n                        required\r\n                        onChange={this.handleChange} \r\n                    />\r\n                </label>\r\n                <label htmlFor=\"number\">\r\n                    Number\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"number\" \r\n                        value={number}\r\n                        required\r\n                        onChange={this.handleChange} \r\n                    />\r\n                </label>\r\n                <button type=\"submit\"> Add new contact </button>\r\n            </form>\r\n        );        \r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmitData: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onChangeFilter}) => (\r\n    <>\r\n        <p>Find contacts by name</p>\r\n        <input \r\n        name = \"filter\" \r\n        onChange={onChangeFilter} \r\n        value = {value}/>\r\n    </>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact })=> (\r\n    <div className={`${styles.contactElement} container shadow`}> \r\n        <div className={styles.contactContainer}>\r\n            <span>{contact.name}</span>\r\n            <span>{contact.number}</span>\r\n        </div>\r\n        <button \r\n        onClick= {()=>onDeleteContact(contact.id)}\r\n        type=\"button\"\r\n        className={styles.deleteBtn}\r\n        >\r\n        X\r\n        </button>\r\n    </div>\r\n)\r\n\r\n\r\nContactListItem.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact}) => {\r\n    return(\r\n        <TransitionGroup component=\"ul\">\r\n            {contacts.map(contact => (\r\n                <CSSTransition\r\n                    key = {contact.id}\r\n                    timeout={200}\r\n                    unmountOnExit\r\n                    classNames={slideFromLeftTransition}\r\n                >\r\n                    <li>\r\n                        <ContactListItem contact={contact} onDeleteContact={onDeleteContact}/>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className={styles.notification}>{message}</div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter';\nimport ContactList from \"../ContactList/ContactList\";\nimport shortid from 'shortid';\nimport styles from './app.module.css';\nimport Notification from '../Notification/Notification';\nimport slideFromRightTransition from '../../transitions/slideFromRight.module.css';\nimport slideFromLeftTransition from '../../transitions/slideFromLeft.module.css';\nimport contactsTransition from '../../transitions/contacts.module.css';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nclass App extends Component {\n    state = {\n      contacts: [],\n      filter: '',\n      message: '',\n      showMessage: false,\n    }\n\n    componentDidMount(){\n      if (localStorage.getItem(\"contacts\")) {\n        this.setState ( prevState => ({\n          contacts: [...JSON.parse(localStorage.getItem(\"contacts\"))]          \n        }\n      ))}\n    };\n\n    componentDidUpdate(prevProps, prevState){\n      if (prevState.contacts !== this.state.contacts) {\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n      }\n    };\n  \n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n  \n  onSubmitData = (data) => {\n    const { contacts } = this.state;\n\n    const addContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (contacts.find(contact => contact.name === addContact.name)) {\n      // alert(`${addContact.name} is already in contacts!`);\n      this.setState({showMessage: true, message: 'Contact already exists!'})\n      setTimeout(() => {\n        this.setState({showMessage: false});\n      }, 2000);\n      return;\n    }\n\n    this.setState({\n      contacts: [...contacts, addContact],\n    });\n  };\n\n  render () {\n    const { contacts, filter, message, showMessage }= this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <>\n      <div className=\"container\">\n        <CSSTransition\n          in\n          appear\n          timeout\n          classNames={slideFromLeftTransition }\n        >\n            <h1 className={styles[\"logo-txt\"]}>Phonebook</h1>\n        </CSSTransition>\n        <CSSTransition \n          in={showMessage} \n          timeout={200} \n          classNames={slideFromRightTransition} \n          unmountOnExit\n          >\n            <Notification message={message} />\n        </CSSTransition>\n        \n        <ContactForm onSubmitData={this.onSubmitData} /> \n\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={200}\n          classNames={contactsTransition}\n          unmountOnExit\n        >\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        <ContactList \n          contacts={filteredContacts} \n          onDeleteContact={this.onDeleteContact} \n        />\n        {/* {contacts.length !==0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteContact} />\n          </>\n        )} */}\n      </div>  \n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n \nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideFromLeft_enter__e8d34\",\"appear\":\"slideFromLeft_appear__2viN8\",\"enterActive\":\"slideFromLeft_enterActive__2O56W\",\"appearActive\":\"slideFromLeft_appearActive__2yZTw\",\"appearDone\":\"slideFromLeft_appearDone__3rQxn\",\"exit\":\"slideFromLeft_exit__2xLNu\",\"exitActive\":\"slideFromLeft_exitActive__2q_5P\"};"],"sourceRoot":""}